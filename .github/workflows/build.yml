# .github/workflows/build.yml
name: Build, Push, and Deploy to ACA

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    # 只在 push 到 main 时执行
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    outputs:
      acr_login_server: ${{ steps.acr_login.outputs.acr_login_server }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # 1️⃣ 获取/生成 ACR 登录服务器
      - name: Get or Create ACR and get Login Server
        id: acr_login
        run: |
          ACR_NAME=$(az acr list \
                     --resource-group DutchSalaryToday-RG \
                     --query "[0].name" -o tsv)
          if [ -z "$ACR_NAME" ]; then
            # Bicep 会负责创建 ACR，先占位
            echo "acr_login_server=placeholder.azurecr.io" >> $GITHUB_OUTPUT
          else
            LOGIN_SERVER=$(az acr show \
                           --name "$ACR_NAME" \
                           --query loginServer -o tsv)
            echo "acr_login_server=$LOGIN_SERVER" >> $GITHUB_OUTPUT
          fi

      # 2️⃣ 登录 ACR（仅当 ACR 已存在时）
      - name: Login to ACR
        if: steps.acr_login.outputs.acr_login_server != 'placeholder.azurecr.io'
        run: |
          ACR_NAME=$(az acr list \
                     --resource-group DutchSalaryToday-RG \
                     --query "[0].name" -o tsv)
          az acr login --name "$ACR_NAME"

      # 3️⃣ 构建并推送镜像
      - name: Build and Push Backend Image
        if: steps.acr_login.outputs.acr_login_server != 'placeholder.azurecr.io'
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ steps.acr_login.outputs.acr_login_server }}/backend-app:latest

      - name: Build and Push Frontend Image
        if: steps.acr_login.outputs.acr_login_server != 'placeholder.azurecr.io'
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.acr_login.outputs.acr_login_server }}/frontend-app:latest

  # ------------------------------------------------------------------
  # 部署阶段
  deploy_to_aca:
    runs-on: ubuntu-latest
    needs: build_and_push
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy Bicep template
        id: deploy
        uses: azure/arm-deploy@v2
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: DutchSalaryToday-RG
          template: ./deploy/main.bicep
          parameters: |
            postgresAdminLogin=${{ secrets.POSTGRES_ADMIN_LOGIN }}
            postgresAdminPassword=${{ secrets.POSTGRES_ADMIN_PASSWORD }}
          failOnStdErr: false

      # 4️⃣ 打印前端 URL
      - name: Echo frontend URL
        run: |
          echo "Frontend URL: ${{ steps.deploy.outputs.frontendUrl }}"
